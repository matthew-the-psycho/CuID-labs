1.Реализовать метод Шенкса с подробным выводом промежуточных шагов.
      Параметры m и k должны выбираться автоматически.
  
2. Реализовать дискретное логарифмирование (ДЛ) методом полного перебора.

3. Для каждого из методов реализовать подсчёт выполненного количества умножений.
    Сравнить значения при разных параметрах.

Реализовано ::
main.cpp ::
    <.exe/.elf> <y_base> <a_base> <MOD_base> <--mgmt-key / for Shanks method>

1. Для использования ДЛ по методу Шенкса необходим ключ --mgmt-key.
Параметры m и k выбираются автоматически :: 
    через обращение результата функции вычисления обратного корня
    \\Такая функция была реализована в игре DOOM.
При проверке параметров количество умножений не учитывается.

2. ДЛ методом полного перебора базовый метод при отсутствии, задающего иной метод, ключа.
    \\Ключ --mgmt-key

3. В каждом из методов реализован подсчёт выполненного количества умножений.
    Однако из-за того, что используется функция ENCRYPTOR из ЛР6, 
        которая и учитывает умножения.
    Количество умножений при методе Шенкса больше, чем при прямом переборе
        при параметрах, что были использованы.
    \\Из этого следует предположить, 
    \\\\что использование функции ENCRYPTOR было допустимо,
    \\\\однако АНТИ-оптимально.