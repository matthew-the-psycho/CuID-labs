1. Сгенерировать файл из случайных символов с помощью встроенного ГПСЧ
    или самостоятельно реализованного линейного конгруэнтного генератора.
    Сей файл будет ключём для следующего пункта.
2. Реализовать шифр Вернама для зашифровки/расшифровки файла.
    :: Выбор файла с текстом и файла с ключём ::
    :: Результат : XOR от двух файлов > <filename>.enc 
3. Реализовать применение любого поточного шифра. 
    \\Например RC4

Реализовано:
Пункты 1 и 2 объединены:
12_xor_code_decode.cpp ::
<.exe/.elf> <file to process> <--code or --decode> <--regenerate-key>
Если ключа нет, то сопряжённый для файла ключ, сгенерируется автоматически,
Если ключ есть, но стоит флаг --regenerate-key, ключ перегенерируется,
Иначе используется ключ, который есть.

Аналогичным образом
Пункты 1 и 3 объединены:
3_VCMP_code_decode.cpp ::
<.exe/.elf> <file to process> <--code or --decode> <--regenerate-key>
Если ключа нет, то сопряжённый для файла ключ, сгенерируется автоматически,
Если ключ есть, но стоит флаг --regenerate-key, ключ перегенерируется,
Иначе используется ключ, который есть.
Однако в данной реализации ключ имеет длину не в весь файл, а только 256 бит.
Шифрование производится по модифицированному методу от RC4 --> VMPC 
\\Реализация функции VMPC взята с github/huaesthetica63/VMPC 