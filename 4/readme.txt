ЛР4 ::
    1. Реализовать или взять готовую реализацию итеративного блочного шифра.
    2. Реализовать зашифровку/расшировку файла этим шифром.

ЛР5 ::
    1. Реализовать или взять готовую реализацию любой криптографической хэш-функции;
        допускается реализация криптографической хэш-функции на базе любого блочного шифра.
    2. С использованием хэш-функции ::
        Реализовать генерацию псевдослучайных чисел.

Реализовано:
main.cpp :: 
<.exe/.elf>
<file to process>
<--code or --decode>
<   --type-thread-rand
    /--type-thread-sha128
    /--type-thread-sha256
    /--type-thread-sha512
    /--type-block-rand
    /--type-block-sha128
    /--type-block-sha256
    /--type-block-sha512
>
<--regenerate-key>

Реализовано два вида итеративного шифрования:
1) "Поточное" -- XOR над байтом входного потока и байтом ключа ::
    :: При этом каждый байт смещает используемый байт ключа ::
    :: Деление по модулю максимального индекса байта СУММЫ результируещего и входного байта;
2) Блочное -- XOR над последовательностью байтов входного потока и последовательностью байтов ключа ::
    :: При это происходит "проворот" ключа ::
    :: Деление по модулю максимального индекса байта СУММЫ ПЕРВЫХ(НУЛЕВЫХ) результируещего и входного байта;

Реализовано 4 вида генерации ключа:
1) 256-бит рандомный ключ, именно для этого ключа применим флаг --regenerate-key;
2) ХЭШ-ключ :: SHA128 от базового файла;
3) ХЭШ-ключ :: SHA256 от базового файла;
4) ХЭШ-ключ :: SHA512 от базового файла.
!ХЭШ-КЛЮЧИ ВСЕГДА ПЕРЕГЕНЕРИРУЮТСЯ (при флаге --code), для них флаг ренегенрации бесполезен!